/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jEWS;

import java.awt.FlowLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import javax.swing.JTable;
import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JPanel;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.sql.ResultSet;
import java.sql.Statement;

/**
 *
 * @author Renaldy
 */
public class DialogKoKab extends javax.swing.JDialog {

    /**
     * Creates new form DialogKoKab
     */
    private static JTable jTable1;
            
    public DialogKoKab(java.awt.Frame parent, boolean modal) {
        
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        initComponents();
        try {                       
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost/db_bmkg?user=root&password=skm2010");
            Statement st = connect.createStatement();
            String sql="";
            sql = "SELECT * FROM tbl_mstr_kokab ORDER BY kode_kokab";
            ResultSet rs = st.executeQuery(sql);
            rs.last();
            String[][] data = new String[rs.getRow()][3];
            rs.beforeFirst();
            int idx = 0;
            while (rs.next()){                 
               data[idx][0] = rs.getString("kode_kokab");
               data[idx][1] = rs.getString("kokab");
               data[idx][2] = rs.getString("provinsi");
               idx  = idx + 1;
            }
            rs.close(); 

            JPanel panel = new JPanel();
            panel.setSize(500,400);
            
            String[] columnNames = {"Kode Kokab", "Kokab", "Provinsi"}; 
            jTable1 = new JTable(data, columnNames);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
            //jTable1.setPreferredScrollableViewportSize(new Dimension(100, 200));	// arg values are not critical
            //jTable1.setFillsViewportHeight(false);
            //jTable1.validate();
            
            JScrollPane scrollPane = new JScrollPane();
            scrollPane.setViewportView(jTable1);
            scrollPane.validate();
            panel.add(scrollPane);
            
            //panel.setSize(200,600);
            panel.setLayout(new BorderLayout());
            panel.add(jTable1.getTableHeader(), BorderLayout.PAGE_START);
            panel.add(jTable1, BorderLayout.CENTER);
            //panel.validate();
            add(panel);
            validate();
        } catch (Exception e) {   
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button1 = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DAFTAR KAB/KOTA");
        setMinimumSize(new java.awt.Dimension(600, 350));
        setPreferredSize(new java.awt.Dimension(550, 450));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        button1.setLabel("Pilih");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });
        getContentPane().add(button1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 180, 60, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        this.dispose();
    }//GEN-LAST:event_button1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogKoKab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogKoKab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogKoKab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogKoKab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogKoKab dialog = new DialogKoKab(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
            }
        });
    }
    
    public static String[] AmbilNilai () {
        int idx = jTable1.getSelectedRow();
        String myValue[] = {"","", ""};
        if (idx > -1) {
            myValue[0] = jTable1.getValueAt(idx, 0).toString();
            myValue[1] = jTable1.getValueAt(idx, 1).toString();
            myValue[2] = jTable1.getValueAt(idx, 2).toString();
        }
        return myValue;
    }
    
    private Connection connect = null;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    // End of variables declaration//GEN-END:variables
}
